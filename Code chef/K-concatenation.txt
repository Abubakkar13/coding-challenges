<<<<<<< HEAD
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
    
   public long maxSubArraySum(int a[], int size)
    {
    int max_so_far = a[0];
    int curr_max = a[0];
 
    for (int i = 1; i < size; i++)
    {
        curr_max = Math.max(a[i], curr_max+a[i]);
        max_so_far = Math.max(max_so_far, curr_max);
    }
    return max_so_far;
    }
    
 public static void main(String[] args) {
     Solution sol=new Solution();
        Scanner sc = new Scanner(System.in);
        int test=sc.nextInt();
        while(test>0){
            int n=sc.nextInt();
            int k=sc.nextInt();
            int arr[]=new int[n*k];
            for(int i=0;i<n;i++){
                arr[i]=sc.nextInt();
                
                int j=0;
                while(j<k*n){
                    arr[i+j]=arr[i];
                   
                    j=j+n;
                }
                
            }
            System.out.println(sol.maxSubArraySum(arr,arr.length));
            
            test--;
        }
       
   }
}
=======
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
    
   public long maxSubArraySum(int a[], int size)
    {
    int max_so_far = a[0];
    int curr_max = a[0];
 
    for (int i = 1; i < size; i++)
    {
        curr_max = Math.max(a[i], curr_max+a[i]);
        max_so_far = Math.max(max_so_far, curr_max);
    }
    return max_so_far;
    }
    
 public static void main(String[] args) {
     Solution sol=new Solution();
        Scanner sc = new Scanner(System.in);
        int test=sc.nextInt();
        while(test>0){
            int n=sc.nextInt();
            int k=sc.nextInt();
            int arr[]=new int[n*k];
            for(int i=0;i<n;i++){
                arr[i]=sc.nextInt();
                
                int j=0;
                while(j<k*n){
                    arr[i+j]=arr[i];
                   
                    j=j+n;
                }
                
            }
            System.out.println(sol.maxSubArraySum(arr,arr.length));
            
            test--;
        }
       
   }
}
>>>>>>> 79de38a298a2b8cadd26e57f6e4ed7e9c753fed3
